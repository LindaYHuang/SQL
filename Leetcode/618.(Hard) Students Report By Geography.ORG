A U.S graduate school has students from Asia, Europe and America. The students' location information are stored in table student as below.
#+BEGIN_EXAMPLE
| name   | continent |
|--------|-----------|
| Jack   | America   |
| Pascal | Europe    |
| Xi     | Asia      |
| Jane   | America   |
#+END_EXAMPLE

Pivot the continent column in this table so that each name is sorted alphabetically and displayed underneath its corresponding continent. The output headers should be America, Asia and Europe respectively. It is guaranteed that the student number from America is no less than either Asia or Europe.

For the sample input, the output is:
#+BEGIN_EXAMPLE
| America | Asia | Europe |
|---------|------|--------|
| Jack    | Xi   | Pascal |
| Jane    |      |        |
#+END_EXAMPLE

Follow-up: If it is unknown which continent has the most students, can you write a query to generate the student report?




#+BEGIN_SRC SQL
SELECT America, Asia,Europe
FROM 
     (SELECT @r_id1 := 0, @r_id2 := 0, @r_id3 := 0,
      (SELECT @r_id1 :=@r_id1 +1 as rowid1,
              name as America
       FROM student WHERE continent = 'America'
       ORDER BY America) AS t1
       LEFT JOIN
       (SELECT @r_id2 :=@r_id2 +1 as rowid2,
              name as Asia
       FROM student WHERE continent = 'Asia'
       ORDER BY Asia) AS t2 
       ON t1.r_id1 = t2.r_id2
       LEFT JOIN
       (SELECT @r_id3 :=@r_id3 +1 as rowid3,
              name as Europe
       FROM student WHERE continent = 'Europe'
       ORDER BY Europe) AS t3
       ON t1.r_id1 = t3.r_id3
      )


#+END_SRC
