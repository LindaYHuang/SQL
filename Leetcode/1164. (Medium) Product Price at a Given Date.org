#+BEGIN_EXAMPLE
Table: Products
+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| product_id    | int     |
| new_price     | int     |
| change_date   | date    |
+---------------+---------+
(product_id, change_date) is the primary key of this table.
Each row of this table indicates that the price of some product was changed to a new price at some date.
#+END_EXAMPLE


Write an SQL query to find the prices of all products on 2019-08-16. Assume the price of all products before any change is 10.

The query result format is in the following example:
#+BEGIN_EXAMPLE
Products table:
+------------+-----------+-------------+
| product_id | new_price | change_date |
+------------+-----------+-------------+
| 1          | 20        | 2019-08-14  |
| 2          | 50        | 2019-08-14  |
| 1          | 30        | 2019-08-15  |
| 1          | 35        | 2019-08-16  |
| 2          | 65        | 2019-08-17  |
| 3          | 20        | 2019-08-18  |
+------------+-----------+-------------+
#+END_EXAMPLE
#+BEGIN_EXAMPLE
Result table:
+------------+-------+
| product_id | price |
+------------+-------+
| 2          | 50    |
| 1          | 35    |
| 3          | 10    |
+------------+-------+
#+END_EXAMPLE

--------------------------------------------------------------------
- Solution:

#+BEGIN_SRC sql
#没验证
SELECT activity_date AS day,
       COUNT(DISTINCT user_id) AS active_users      
FROM Activity 
WHERE activity_date >= DATE_ADD('2019-07-27',INTERVAL -30 DAY)
GROUP BY user_id
#+END_SRC

