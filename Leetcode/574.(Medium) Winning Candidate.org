Candidate
#+BEGIN_EXAMPLE
+-----+---------+
| id  | Name    |
+-----+---------+
| 1   | A       |
| 2   | B       |
| 3   | C       |
| 4   | D       |
| 5   | E       |
+-----+---------+ 
#+END_EXAMPLE

 Vote
 #+BEGIN_EXAMPLE
+-----+--------------+
| id  | CandidateId  |
+-----+--------------+
| 1   |     2        |
| 2   |     4        |
| 3   |     3        |
| 4   |     2        |
| 5   |     5        |
+-----+--------------+
#+END_EXAMPLE

output
#+BEGIN_EXAMPLE
+------+
| Name |
+------+
| B    |
+------+
#+END_EXAMPLE

Notes:
You may assume there is no tie, in other words 
there will be at most one winning candidate.


-Solution
#+BEGIN_SRC python
    select c.name
    from vote t
    left join candidate c on c.id = t.CandidateId
    group by t.CandidateId
    order by count(t.id) desc limit 1nt(id) Desc
            Limit 1)
#+END_SRC


-
#+BEGIN_SRC python
#直接连接两表，再按Candidate分组，统计投票数，取最高人。
#有个重要的细节是Vote表中的某些CandidateId可能不在Candidate 表中。
#因此，需要在外围过滤掉Name是NULL的行。
select A.Name
from(
    select C.Name
    from Vote as V left join 
    Candidate as C
     on(C.id = V.CandidateId)
    group by V.CandidateId,C.Name
    order by count(V.id) desc
    limit 0,1
) as A
where A.Name is not null
#+END_SRC
