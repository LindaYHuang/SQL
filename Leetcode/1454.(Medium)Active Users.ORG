SQL Schema
Table Accounts:
#+BEGIN_EXAMPLE
+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| id            | int     |
| name          | varchar |
+---------------+---------+
the id is the primary key for this table.
This table contains the account id and the user name of each account.
 #+END_EXAMPLE

Table Logins:
#+BEGIN_EXAMPLE
+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| id            | int     |
| login_date    | date    |
+---------------+---------+
There is no primary key for this table, it may contain duplicates.
This table contains the account id of the user who logged in and the login date. A user may log in multiple times in the day.
#+END_EXAMPLE 

Write an SQL query to find the id and the name of active users.

Active users are those who logged in to their accounts for 5 or more consecutive days.

Return the result table ordered by the id.

The query result format is in the following example:
#+BEGIN_EXAMPLE
Accounts table:
+----+----------+
| id | name     |
+----+----------+
| 1  | Winston  |
| 7  | Jonathan |
+----+----------+

Logins table:
+----+------------+
| id | login_date |
+----+------------+
| 7  | 2020-05-30 |
| 1  | 2020-05-30 |
| 7  | 2020-05-31 |
| 7  | 2020-06-01 |
| 7  | 2020-06-02 |
| 7  | 2020-06-02 |
| 7  | 2020-06-03 |
| 1  | 2020-06-07 |
| 7  | 2020-06-10 |
+----+------------+

Result table:
+----+----------+
| id | name     |
+----+----------+
| 7  | Jonathan |
+----+----------+
User Winston with id = 1 logged in 2 times only in 2 different days, so, Winston is not an active user.
User Jonathan with id = 7 logged in 7 times in 6 different days, five of them were consecutive days, so, Jonathan is an active user.
#+END_EXAMPLE



---------------------------------------------------------------------
- Solution:

#+BEGIN_SRC sql
#没验证
SELECT u.user_id AS seller_id ,
       IFNULL（CASE WHEN u.favorite_brand = t.item_brand then 'yes'
                    ELSE 'no'
               END，'no'） AS 2nd_item_fav_brand      
FROM user u 
LEFT JOIN
          (SELECT o.seller_id,
                  o.order_date,
                  i.item_brand,
                  case when @id=seller_id then @cnt:=@cnt+1
                       when @id:=seller_id then @cnt:=1 end cnt
          FROM orders o, (select @id:=null, @cnt:=null) t1
          INNER JOIN Items i ON o.item_id = i.item_id
          ORDER BY o.seller_id, o.order_date,
          )
ON t.cnt=2 and u.user_id = t.seller_id
ORDER BY seller_id
#+END_SRC
