#+BEGIN_EXAMPLE
Table: Enrollments
+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| student_id    | int     |
| course_id     | int     |
| grade         | int     |
+---------------+---------+
(student_id, course_id) is the primary key of this table.
#+END_EXAMPLE
Write a SQL query to find the highest grade with its corresponding course for each student. In case of a tie, you should find the course with the smallest course_id. The output must be sorted by increasing student_id.

 
The query result format is in the following example:
#+BEGIN_EXAMPLE
Enrollments table:
+------------+-------------------+
| student_id | course_id | grade |
+------------+-----------+-------+
| 2          | 2         | 95    |
| 2          | 3         | 95    |
| 1          | 1         | 90    |
| 1          | 2         | 99    |
| 3          | 1         | 80    |
| 3          | 2         | 75    |
| 3          | 3         | 82    |
+------------+-----------+-------+

1. Get highest grade for each student
2. In case of a tie, choose the course with smaller `course_id`
3. sorted by increasing `student_id`

Result table:
+------------+-------------------+
| student_id | course_id | grade |
+------------+-----------+-------+
| 1          | 2         | 99    |
| 2          | 2         | 95    |
| 3          | 3         | 82    |
+------------+-----------+-------+
#+END_EXAMPLE



#+BEGIN_SRC sql
#已验证
select t.student_id , t.course_id , t.grade 
from
  (select student_id , course_id , grade,
  dense_rank () over (partition by student_id order by grade desc,course_id asc) dr
  from Enrollments
) as t
where t.dr = 1
order by t.student_id;



#DENNYZHANG
SELECT student_id, MIN(course_id) course_id, grade
FROM Enrollments
WHERE (student_id, grade) IN 
        (SELECT student_id, MAX(grade) 
        FROM Enrollments
        GROUP BY student_id)
GROUP BY student_id
ORDER BY student_id

#+END_SRC sql
