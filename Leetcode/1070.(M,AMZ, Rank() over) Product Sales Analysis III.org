Table: Sales
#+BEGIN_EXAMPLE
+-------------+-------+
| Column Name | Type  |
+-------------+-------+
| sale_id     | int   |
| product_id  | int   |
| year        | int   |
| quantity    | int   |
| price       | int   |
+-------------+-------+
sale_id is the primary key of this table.
product_id is a foreign key to Product table.
Note that the price is per unit.
#+END_EXAMPLE

Table: Product
#+BEGIN_EXAMPLE
+--------------+---------+
| Column Name  | Type    |
+--------------+---------+
| product_id   | int     |
| product_name | varchar |
+--------------+---------+
product_id is the primary key of this table.
#+END_EXAMPLE

Write an SQL query that selects the product id, year, quantity, and price for the first year of every product sold.

The query result format is in the following example:
#+BEGIN_EXAMPLE
Sales table:
+---------+------------+------+----------+-------+
| sale_id | product_id | year | quantity | price |
+---------+------------+------+----------+-------+ 
| 1       | 100        | 2008 | 10       | 5000  |
| 2       | 100        | 2009 | 12       | 5000  |
| 7       | 200        | 2011 | 15       | 9000  |
+---------+------------+------+----------+-------+

Product table:
+------------+--------------+
| product_id | product_name |
+------------+--------------+
| 100        | Nokia        |
| 200        | Apple        |
| 300        | Samsung      |
+------------+--------------+

Result table:
+------------+------------+----------+-------+
| product_id | first_year | quantity | price |
+------------+------------+----------+-------+ 
| 100        | 2008       | 10       | 5000  |
| 200        | 2011       | 15       | 9000  |
+------------+------------+----------+-------+
#+END_EXAMPLE

---------------------------------------------------------------------
- Solution:
#+BEGIN_SRC sql
(select u.name as results
from users u
join (select user_id,count(rating) as num_r
     from Movie_Rating
     group by user_id) as m
on m.user_id = u.user_id
order by m.num_r desc, u.name 
limit 1)
union
(select mm.title as results
from movies mm
join (select movie_id,
     avg(rating) as avg_r
     from Movie_Rating
     where left(created_at,7) = '2020-02'
     group by movie_id )as x
on mm.movie_id = x.movie_id
order by x.avg_r desc, mm.title 
limit 1)
#+END_SRC
